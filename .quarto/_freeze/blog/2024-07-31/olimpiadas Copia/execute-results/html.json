{
  "hash": "1903950f666d482494922dafdb4c5a60",
  "result": {
    "markdown": "---\ntitle: \"Olimpíadas e Estatísticas\"\nauthor: \"Pedro Garcia\"\ndate: 2024-07-24\ndate-format: DD/MM/YYYY\nimage: logo2.png\ncategories: [esportes, olimpíadas, gráficos, análise de dados, países, ggplot, dplyr]\ndescription: \"\"\nlanguage: _custom.yml\npage-break-after: always\nformat:\n  html:\n   theme: darkly\n   toc: true\n   toc-location: right\n   toc-depth: 3\n   code-fold: true\n   code-summary: \"Mostre o Código\"\n   css: styles.css\n\n---\n\n\n\n\n\n\n# Introdução {.justify}\n\nQuando criança, lembro-me de assistir às Olimpíadas sem entender muito bem seu real impacto. Todos aqueles esportes diferentes, cujas regras eu não conhecia direito, traziam novas descobertas. A cerimônia de abertura, então, me encantava muito; ver todas aquelas bandeiras (talvez ali tenha adquirido um fascínio imediato por bandeiras que perdura até hoje) e toda aquela diversidade cultural era realmente muito interessante!\n\nNaquela época, eu não era tão fascinado por futebol, esporte que se tornaria meu hiperfoco até os dias atuais. Mas aquele meu encantamento pelos países e suas particularidades ainda se mantém, com uma ênfase maior no contexto futebolístico.\n\nHoje, em um período olímpico, revisito esses sentimentos da infância usando estatística. Adentrarei ainda mais nas particularidades desse megaevento a partir de uma base de dados histórica do quadro de medalhas, respondendo perguntas como: quais são os países com maior desempenho por esporte? Quais países têm maior integração de mulheres? No geral, quais são as nações que dominam as competições?\n\nUm fator importante é que nossa análise será apenas das competições que aconteceram neste século, incluindo Olimpíadas de inverno e verão.\n\n\n\n# Tratamento dos Dados {.justify}\n\n### Carregando os Pacotes {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nrequire(dplyr) \nrequire(tidyr) \nrequire(ggplot2) \nlibrary(dplyr) \nlibrary(countrycode) \nlibrary(ggplot2) \nrequire(DT)\n```\n:::\n\n\n\n### Carregando e Pré-Visualizando os Dados {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados = read.csv(file = 'dataset_olympics.csv',header = T) # Carrega os dados do arquivo CSV\nnoc = read.csv(file = 'noc_region.csv',header = T) # Carrega os dados do arquivo CSV\n#str(dados) # Mostra a estrutura dos dados\n# Exibe as primeiras 10 linhas dos dados como uma tabela dinâmica com estilo personalizado\ndatatable(\n  dados[sample(1:nrow(dados),100),],\n  options = list(\n    pageLength = 10, \n    autoWidth = TRUE,\n    columnDefs = list(\n      list(targets = '_all', className = 'dt-center'),  # Centraliza os dados\n      list(targets = '_all', render = JS(\n        \"function(data, type, row, meta) {\",\n        \"return '<span style=\\\"font-size:14px;\\\">' + data + '</span>';\",\n        \"}\"))\n    ),\n    scrollX = TRUE  # Adiciona barra de rolagem horizontal se necessário\n  ),\n  rownames = FALSE,\n  class = 'cell-border stripe',\n  style = \"bootstrap\",\n  callback = JS(\n    \"table.on('draw.dt', function() {\",\n    \"$('table.dataTable').css({'background-color': 'black', 'color': 'white'});\",\n    \"$('table.dataTable thead th').css({'background-color': '#333', 'color': 'white'});\",\n    \"$('table.dataTable tfoot th').css({'background-color': '#333', 'color': 'white'});\",\n    \"$('table.dataTable tbody tr').css({'background-color': 'black', 'color': 'white'});\",\n    \"$('table.dataTable tbody tr:hover').css({'background-color': '#444', 'color': 'white'});\",\n    \"});\"\n  )\n)\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"datatables html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-2832509050eb26f7e1cc\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-2832509050eb26f7e1cc\">{\"x\":{\"style\":\"bootstrap\",\"filter\":\"none\",\"vertical\":false,\"data\":[[22868,28465,32475,25184,2299,2693,22598,17549,12983,28001,8709,7693,3952,32574,14518,33888,23489,8230,21621,3522,29625,20331,634,15834,26052,178,22557,20326,6769,5831,8559,17386,17075,14128,20066,19009,5119,3866,4462,25988,24154,28727,25855,31871,16904,14440,27785,26731,18826,29139,28132,17645,29933,20885,4059,32901,22677,10867,7421,21598,29103,27144,24799,20145,6247,1967,29007,6570,2759,27942,15524,34275,34955,22619,30109,4611,34265,28489,5867,16663,46,17612,7285,16862,28137,6954,14968,29592,9700,7607,12304,25480,31309,16491,14549,21546,18105,15905,13905,34300],[\"Anthony \\\"Tony\\\" Cook\",\"Hans Diethelm\",\"Carsten Embach\",\"Nndor Dni\",\"Matas Albarracn\",\"Najah Ali Salah\",\"Deborah Compagnoni\",\"Julio Csar Camacho\",\"Rodney \\\"Rod\\\" Boll\",\"Pavel Semyonovich Deyev\",\"Klemen Bauer\",\"Jacqueline Barasinski\",\"Agneta Liselotte \\\"Lisa\\\" Andersson\",\"Yukio Endo\",\"Craig Bradshaw\",\"Martina Falke (Taudte-)\",\"James Milton \\\"Jim\\\" Courtright\",\"Caroline Bartasek\",\"Gheorghe Ciobotaru\",\"Edgar Montague Amphlett\",\"Henk Marcel Dost\",\"Chen Zhen\",\"Paul Accola\",\"Alfred Heinz \\\"Fredy\\\" Brupbacher\",\"Nando de Colo\",\"Sayed Abdel Gadir\",\"Christopher \\\"Chris\\\" Colwill\",\"Chen Yufeng\",\"Ali Ahmed Mustafa Bagdadi\",\"Sidney James Montford \\\"Sid\\\" Atkinson\",\"Vladimir Batez\",\"Ral Jlio de Almeida Pimenta Marques Caldeira\",\"Andr Byrame\",\"Clifford Frederick \\\"Cliff\\\" Bourland\",\"Viktoriya Vladimirovna Chayka\",\"Julio Castro del Rosario\",\"Cihat Arman\",\"Verne Ralph Anderson\",\"Michel Ansermet\",\"Henri Jhan ric Joseph Marie de Buhan\",\"Sebastin Ariel Cuattrin\",\"Adrien Dipanda\",\"Antnio Augusto Sampaio e Melo Pereira de Almeida\",\"Florence Ekpo-Umoh (-Velte-)\",\"Erich Butka\",\"Hvard Bkko\",\"Vincent Descombe-Sevoie\",\"Donna Elizabeth de Varona (-Pinto)\",\"Vra slavsk (-Odloilov)\",\"Peter Dokl\",\"Jennifer Diachun (-Palmer)\",\"Paul Camilleri\",\"Jessica Margaret Aida \\\"Jess\\\" Draskau-Petersson\",\"Warren Houston Chivers\",\"Georges Ivan \\\"Go\\\" Andr (Monnard-)\",\"Bo Evert Ericsson\",\"Philip Ransom \\\"Phil\\\" Conley\",\"Marcello Bertinetti\",\"Falk Balzer\",\"Luigi Cimnaghi\",\"Hugh William \\\"Bill\\\" Doherty\",\"Mara Cecilia del Risco\",\"Daemers\",\"Nadezhda Chemezova\",\"Alain Ayissi\",\"Ibrahim Al-Idokht\",\"Rafa Dobrowolski\",\"Mikhail Yordanov Bachvarov\",\"Penny Alison\",\"Konstantinos Devetzis\",\"Gilberto Willmount Brown\",\"Christian Faure\",\"Vanessa Ferrari\",\"Giuseppe Conca\",\"Duan Drka\",\"Duan Antunovi\",\"Suzanne Margaret \\\"Suzie\\\" Faulkner\",\"Diego Dez de Rivera y Figueroa\",\"Mohamed Attoumane\",\"Alphonse Adolph Burnand, Jr.\",\"Hans Aasns\",\"Oscar Camenzind\",\"Rudolf Victor \\\"Rudi\\\" Ball\",\"Patrick Bussler\",\"Ion Diaconu\",\"Antonietta Baistrocchi\",\"Mark Bresciano\",\"Mrvio Kelly dos Santos\",\"Horst Federico Bellingrodt Wolf\",\"Sheridon Baptiste\",\"James Robert Block\",\"Kimiko Date (-Krumm)\",\"Ivelisse Echevarra\",\"William Douglas \\\"Doug\\\" Burden\",\"G. Alberto Braglia\",\"Javier Cienfuegos Pinilla\",\"Constantin Carabela\",\"Emily Brydon\",\"Ahmed Bouazza\",\"Georges-mile Fauvellenull,15,22,24,28,24,24,null,18,29,17,null,27,25,25,27,26,36,33,29,24,25,23,25,20,26,26,30,24,21,39,26,25,22,23,29,null,37],[183,179,189,null,174,150,165,167,185,168,183,161,167,161,208,160,190,175,177,null,195,172,176,null,196,180,178,null,null,186,192,null,165,183,164,null,null,null,178,null,183,202,170,170,178,182,172,168,160,178,165,171,170,null,188,188,190,null,189,170,186,174,null,179,null,null,180,174,175,null,188,180,146,null,165,190,164,null,null,null,194,173,163,185,170,191,176,173,181,182,182,164,null,195,167,187,172,181,163,null],[68,73,93,null,65,48,62,60,95,66,72,58,49,58,106,56,80,67,78,null,86,67,82,null,91,56,76,null,null,76,85,null,63,75,50,null,null,null,72,null,86,105,71,60,112,76,58,61,58,72,57,69,62,null,85,103,88,null,80,66,83,60,null,60,null,null,80,73,77,null,75,70,45,56,69,91,64,null,null,null,93,63,63,84,69,70,76,null,77,84,75,52,null,89,null,110,72,90,53,null],[\"Australia\",\"Switzerland\",\"Germany-2\",\"Hungary\",\"Argentina\",\"Iraq\",\"Italy\",\"Venezuela\",\"Canada\",\"Soviet Union\",\"Slovenia\",\"France\",\"Sweden\",\"Japan\",\"New Zealand\",\"East Germany\",\"Canada\",\"Australia\",\"Romania\",\"Great Britain\",\"Netherlands\",\"China\",\"Switzerland\",\"Switzerland\",\"France\",\"Sudan\",\"United States\",\"China\",\"Egypt\",\"South Africa\",\"Serbia and Montenegro\",\"Portugal\",\"France\",\"United States\",\"Belarus\",\"Spain\",\"Turkey\",\"Canada\",\"Switzerland\",\"France\",\"Brazil\",\"France\",\"Portugal\",\"Germany\",\"Austria\",\"Norway\",\"France\",\"United States\",\"Czechoslovakia\",\"Slovenia\",\"Canada\",\"Malta\",\"Denmark\",\"United States\",\"France\",\"Sweden\",\"United States\",\"Italy\",\"Germany\",\"Italy\",\"Australia\",\"Peru\",\"Belgium\",\"Russia\",\"Cameroon\",\"Iran\",\"Poland\",\"Bulgaria\",\"South Africa\",\"Greece\",\"United States Virgin Islands\",\"France\",\"Italy\",\"Italy\",\"Czechoslovakia\",\"Yugoslavia\",\"Australia\",\"Spain\",\"Comoros\",\"Angelita\",\"Norway\",\"Switzerland\",\"Germany\",\"Germany\",\"Moldova\",\"Italy\",\"Australia\",\"Brazil\",\"Colombia\",\"Canada-2\",\"Great Britain\",\"Japan\",\"Puerto Rico\",\"United States\",\"Italy\",\"Spain\",\"Romania\",\"Canada\",\"Morocco\",\"France\"],[\"AUS\",\"SUI\",\"GER\",\"HUN\",\"ARG\",\"IRQ\",\"ITA\",\"VEN\",\"CAN\",\"URS\",\"SLO\",\"FRA\",\"SWE\",\"JPN\",\"NZL\",\"GDR\",\"CAN\",\"AUS\",\"ROU\",\"GBR\",\"NED\",\"CHN\",\"SUI\",\"SUI\",\"FRA\",\"SUD\",\"USA\",\"CHN\",\"EGY\",\"RSA\",\"SCG\",\"POR\",\"FRA\",\"USA\",\"BLR\",\"ESP\",\"TUR\",\"CAN\",\"SUI\",\"FRA\",\"BRA\",\"FRA\",\"POR\",\"GER\",\"AUT\",\"NOR\",\"FRA\",\"USA\",\"TCH\",\"SLO\",\"CAN\",\"MLT\",\"DEN\",\"USA\",\"FRA\",\"SWE\",\"USA\",\"ITA\",\"GER\",\"ITA\",\"AUS\",\"PER\",\"BEL\",\"RUS\",\"CMR\",\"IRI\",\"POL\",\"BUL\",\"RSA\",\"GRE\",\"ISV\",\"FRA\",\"ITA\",\"ITA\",\"TCH\",\"YUG\",\"AUS\",\"ESP\",\"COM\",\"USA\",\"NOR\",\"SUI\",\"GER\",\"GER\",\"MDA\",\"ITA\",\"AUS\",\"BRA\",\"COL\",\"CAN\",\"GBR\",\"JPN\",\"PUR\",\"USA\",\"ITA\",\"ESP\",\"ROU\",\"CAN\",\"MAR\",\"FRA\"],[\"1964 Summer\",\"1992 Winter\",\"2002 Winter\",\"1896 Summer\",\"2016 Summer\",\"2004 Summer\",\"1994 Winter\",\"2002 Winter\",\"1996 Summer\",\"1964 Summer\",\"2014 Winter\",\"1968 Winter\",\"1988 Summer\",\"1960 Summer\",\"2004 Summer\",\"1972 Summer\",\"1936 Summer\",\"2004 Summer\",\"1976 Summer\",\"1908 Summer\",\"1996 Summer\",\"1988 Summer\",\"1994 Winter\",\"1960 Winter\",\"2016 Summer\",\"1968 Summer\",\"2008 Summer\",\"1984 Winter\",\"1948 Summer\",\"1928 Summer\",\"1996 Summer\",\"1952 Summer\",\"1972 Summer\",\"1948 Summer\",\"2012 Summer\",\"1932 Summer\",\"1936 Summer\",\"1960 Winter\",\"2000 Summer\",\"1952 Summer\",\"2004 Summer\",\"2016 Summer\",\"1956 Summer\",\"2000 Summer\",\"1972 Summer\",\"2014 Winter\",\"2010 Winter\",\"1964 Summer\",\"1960 Summer\",\"2010 Winter\",\"1972 Summer\",\"1960 Summer\",\"2016 Summer\",\"1936 Winter\",\"1908 Summer\",\"1948 Summer\",\"1956 Summer\",\"1924 Summer\",\"2000 Summer\",\"1964 Summer\",\"1960 Summer\",\"1984 Summer\",\"1932 Summer\",\"1996 Summer\",\"1984 Summer\",\"1992 Summer\",\"2012 Summer\",\"1960 Summer\",\"2008 Summer\",\"1906 Summer\",\"1992 Summer\",\"1980 Summer\",\"2008 Summer\",\"1928 Summer\",\"1980 Summer\",\"1972 Summer\",\"2004 Summer\",\"1924 Summer\",\"2008 Summer\",\"1932 Summer\",\"1936 Summer\",\"2000 Summer\",\"1936 Winter\",\"2010 Winter\",\"2000 Summer\",\"1980 Summer\",\"2000 Summer\",\"1960 Summer\",\"1984 Summer\",\"1994 Winter\",\"1992 Summer\",\"1992 Summer\",\"1996 Summer\",\"1992 Summer\",\"1908 Summer\",\"2012 Summer\",\"1964 Winter\",\"2010 Winter\",\"1960 Summer\",\"1928 Summer\"],[1964,1992,2002,1896,2016,2004,1994,2002,1996,1964,2014,1968,1988,1960,2004,1972,1936,2004,1976,1908,1996,1988,1994,1960,2016,1968,2008,1984,1948,1928,1996,1952,1972,1948,2012,1932,1936,1960,2000,1952,2004,2016,1956,2000,1972,2014,2010,1964,1960,2010,1972,1960,2016,1936,1908,1948,1956,1924,2000,1964,1960,1984,1932,1996,1984,1992,2012,1960,2008,1906,1992,1980,2008,1928,1980,1972,2004,1924,2008,1932,1936,2000,1936,2010,2000,1980,2000,1960,1984,1994,1992,1992,1996,1992,1908,2012,1964,2010,1960,1928],[\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Summer\",\"Winter\",\"Winter\",\"Summer\",\"Summer\"],[\"Tokyo\",\"Albertville\",\"Salt Lake City\",\"Athina\",\"Rio de Janeiro\",\"Athina\",\"Lillehammer\",\"Salt Lake City\",\"Atlanta\",\"Tokyo\",\"Sochi\",\"Grenoble\",\"Seoul\",\"Roma\",\"Athina\",\"Munich\",\"Berlin\",\"Athina\",\"Montreal\",\"London\",\"Atlanta\",\"Seoul\",\"Lillehammer\",\"Squaw Valley\",\"Rio de Janeiro\",\"Mexico City\",\"Beijing\",\"Sarajevo\",\"London\",\"Amsterdam\",\"Atlanta\",\"Helsinki\",\"Munich\",\"London\",\"London\",\"Los Angeles\",\"Berlin\",\"Squaw Valley\",\"Sydney\",\"Helsinki\",\"Athina\",\"Rio de Janeiro\",\"Stockholm\",\"Sydney\",\"Munich\",\"Sochi\",\"Vancouver\",\"Tokyo\",\"Roma\",\"Vancouver\",\"Munich\",\"Roma\",\"Rio de Janeiro\",\"Garmisch-Partenkirchen\",\"London\",\"London\",\"Melbourne\",\"Paris\",\"Sydney\",\"Tokyo\",\"Roma\",\"Los Angeles\",\"Los Angeles\",\"Atlanta\",\"Los Angeles\",\"Barcelona\",\"London\",\"Roma\",\"Beijing\",\"Athina\",\"Barcelona\",\"Moskva\",\"Beijing\",\"Amsterdam\",\"Moskva\",\"Munich\",\"Athina\",\"Paris\",\"Beijing\",\"Los Angeles\",\"Berlin\",\"Sydney\",\"Garmisch-Partenkirchen\",\"Vancouver\",\"Sydney\",\"Moskva\",\"Sydney\",\"Roma\",\"Los Angeles\",\"Lillehammer\",\"Barcelona\",\"Barcelona\",\"Atlanta\",\"Barcelona\",\"London\",\"London\",\"Innsbruck\",\"Vancouver\",\"Roma\",\"Amsterdam\"],[\"Athletics\",\"Cross Country Skiing\",\"Bobsleigh\",\"Athletics\",\"Equestrianism\",\"Boxing\",\"Alpine Skiing\",\"Luge\",\"Shooting\",\"Equestrianism\",\"Biathlon\",\"Luge\",\"Archery\",\"Gymnastics\",\"Basketball\",\"Canoeing\",\"Athletics\",\"Taekwondo\",\"Wrestling\",\"Fencing\",\"Athletics\",\"Handball\",\"Alpine Skiing\",\"Alpine Skiing\",\"Basketball\",\"Boxing\",\"Diving\",\"Cross Country Skiing\",\"Swimming\",\"Athletics\",\"Volleyball\",\"Gymnastics\",\"Athletics\",\"Athletics\",\"Shooting\",\"Shooting\",\"Football\",\"Alpine Skiing\",\"Shooting\",\"Fencing\",\"Canoeing\",\"Handball\",\"Equestrianism\",\"Athletics\",\"Judo\",\"Speed Skating\",\"Ski Jumping\",\"Swimming\",\"Gymnastics\",\"Biathlon\",\"Gymnastics\",\"Cycling\",\"Athletics\",\"Cross Country Skiing\",\"Athletics\",\"Athletics\",\"Athletics\",\"Fencing\",\"Athletics\",\"Gymnastics\",\"Modern Pentathlon\",\"Volleyball\",\"Art Competitions\",\"Swimming\",\"Cycling\",\"Table Tennis\",\"Archery\",\"Athletics\",\"Sailing\",\"Athletics\",\"Boxing\",\"Cycling\",\"Gymnastics\",\"Weightlifting\",\"Weightlifting\",\"Water Polo\",\"Hockey\",\"Fencing\",\"Swimming\",\"Sailing\",\"Shooting\",\"Cycling\",\"Ice Hockey\",\"Snowboarding\",\"Wrestling\",\"Basketball\",\"Football\",\"Water Polo\",\"Shooting\",\"Bobsleigh\",\"Canoeing\",\"Tennis\",\"Softball\",\"Rowing\",\"Gymnastics\",\"Athletics\",\"Biathlon\",\"Alpine Skiing\",\"Boxing\",\"Art Competitions\"],[\"Athletics Men's 10,000 metres\",\"Cross Country Skiing Men's 30 kilometres\",\"Bobsleigh Men's Four\",\"Athletics Men's 800 metres\",\"Equestrianism Mixed Jumping, Individual\",\"Boxing Men's Light-Flyweight\",\"Alpine Skiing Women's Slalom\",\"Luge Men's Singles\",\"Shooting Men's Double Trap\",\"Equestrianism Mixed Three-Day Event, Individual\",\"Biathlon Men's 4 x 7.5 kilometres Relay\",\"Luge Women's Singles\",\"Archery Women's Individual\",\"Gymnastics Men's Horizontal Bar\",\"Basketball Men's Basketball\",\"Canoeing Women's Kayak Singles, Slalom\",\"Athletics Men's Javelin Throw\",\"Taekwondo Women's Welterweight\",\"Wrestling Men's Welterweight, Greco-Roman\",\"Fencing Men's epee, Team\",\"Athletics Men's Decathlon\",\"Handball Women's Handball\",\"Alpine Skiing Men's Super G\",\"Alpine Skiing Men's Giant Slalom\",\"Basketball Men's Basketball\",\"Boxing Men's Lightweight\",\"Diving Men's Synchronized Springboard\",\"Cross Country Skiing Women's 4 x 5 kilometres Relay\",\"Swimming Men's 100 metres Freestyle\",\"Athletics Men's 110 metres Hurdles\",\"Volleyball Men's Volleyball\",\"Gymnastics Men's Team All-Around\",\"Athletics Men's 100 metres\",\"Athletics Men's 200 metres\",\"Shooting Women's Air Pistol, 10 metres\",\"Shooting Men's Small-Bore Rifle, Prone, 50 metres\",\"Football Men's Football\",\"Alpine Skiing Men's Slalom\",\"Shooting Men's Rapid-Fire Pistol, 25 metres\",\"Fencing Men's Foil, Team\",\"Canoeing Men's Kayak Doubles, 500 metres\",\"Handball Men's Handball\",\"Equestrianism Mixed Dressage, Individual\",\"Athletics Women's 4 x 400 metres Relay\",\"Judo Men's Heavyweight\",\"Speed Skating Men's 1,000 metres\",\"Ski Jumping Men's Large Hill, Team\",\"Swimming Women's 4 x 100 metres Freestyle Relay\",\"Gymnastics Women's Floor Exercise\",\"Biathlon Men's 10 kilometres Sprint\",\"Gymnastics Women's Floor Exercise\",\"Cycling Men's Road Race, Individual\",\"Athletics Women's Marathon\",\"Cross Country Skiing Men's 4 x 10 kilometres Relay\",\"Athletics Men's Standing High Jump\",\"Athletics Men's Hammer Throw\",\"Athletics Men's Javelin Throw\",\"Fencing Men's Sabre, Individual\",\"Athletics Men's 110 metres Hurdles\",\"Gymnastics Men's Horse Vault\",\"Modern Pentathlon Men's Individual\",\"Volleyball Women's Volleyball\",\"Art Competitions Mixed Sculpturing, Unknown Event\",\"Swimming Women's 400 metres Freestyle\",\"Cycling Men's 100 kilometres Team Time Trial\",\"Table Tennis Men's Singles\",\"Archery Men's Individual\",\"Athletics Men's 100 metres\",\"Sailing Women's Three Person Keelboat\",\"Athletics Men's 100 metres\",\"Boxing Men's Middleweight\",\"Cycling Men's Road Race, Individual\",\"Gymnastics Women's Team All-Around\",\"Weightlifting Men's Featherweight\",\"Weightlifting Men's Lightweight\",\"Water Polo Men's Water Polo\",\"Hockey Women's Hockey\",\"Fencing Men's Foil, Team\",\"Swimming Men's 50 metres Freestyle\",\"Sailing Mixed 8 metres\",\"Shooting Men's Rapid-Fire Pistol, 25 metres\",\"Cycling Men's Road Race, Individual\",\"Ice Hockey Men's Ice Hockey\",\"Snowboarding Men's Parallel Giant Slalom\",\"Wrestling Men's Welterweight, Freestyle\",\"Basketball Women's Basketball\",\"Football Men's Football\",\"Water Polo Men's Water Polo\",\"Shooting Men's Running Target, 50 metres\",\"Bobsleigh Men's Four\",\"Canoeing Men's Kayak Doubles, 1,000 metres\",\"Tennis Women's Singles\",\"Softball Women's Softball\",\"Rowing Men's Coxless Fours\",\"Gymnastics Men's Individual All-Around\",\"Athletics Men's Hammer Throw\",\"Biathlon Men's 20 kilometres\",\"Alpine Skiing Women's Combined\",\"Boxing Men's Bantamweight\",\"Art Competitions Mixed Architecture, Architectural Designs\"],[\"\",\"\",\"Gold\",\"Silver\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Silver\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"Bronze\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Silver\",\"Gold\",\"\",\"Silver\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Gold\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"Silver\",\"Gold\",\"\",\"\",\"\",\"\",\"\"]],\"container\":\"<table class=\\\"table table-bordered table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>ID<\\/th>\\n      <th>Name<\\/th>\\n      <th>Sex<\\/th>\\n      <th>Age<\\/th>\\n      <th>Height<\\/th>\\n      <th>Weight<\\/th>\\n      <th>Team<\\/th>\\n      <th>NOC<\\/th>\\n      <th>Games<\\/th>\\n      <th>Year<\\/th>\\n      <th>Season<\\/th>\\n      <th>City<\\/th>\\n      <th>Sport<\\/th>\\n      <th>Event<\\/th>\\n      <th>Medal<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"autoWidth\":true,\"columnDefs\":[{\"targets\":\"_all\",\"className\":\"dt-center\"},{\"targets\":\"_all\",\"render\":\"function(data, type, row, meta) {\\nreturn '<span style=\\\"font-size:14px;\\\">' + data + '<\\/span>';\\n}\"}],\"scrollX\":true,\"order\":[],\"orderClasses\":false},\"callback\":\"function(table) {\\ntable.on('draw.dt', function() {\\n$('table.dataTable').css({'background-color': 'black', 'color': 'white'});\\n$('table.dataTable thead th').css({'background-color': '#333', 'color': 'white'});\\n$('table.dataTable tfoot th').css({'background-color': '#333', 'color': 'white'});\\n$('table.dataTable tbody tr').css({'background-color': 'black', 'color': 'white'});\\n$('table.dataTable tbody tr:hover').css({'background-color': '#444', 'color': 'white'});\\n});\\n}\"},\"evals\":[\"options.columnDefs.1.render\",\"callback\"],\"jsHooks\":[]}</script>\n```\n:::\n:::\n\n\n\n### Transformando os Dados {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\ndados$Medal = ifelse(dados$Medal == '','Null',dados$Medal) # Substitui valores vazios em Medal por 'Null'\n\ndados$aux = 1 # Cria uma coluna auxiliar com valor 1\n\ndados = dados |> \n  pivot_wider(names_from = c(Medal),values_from = aux,values_fn = sum,values_fill = 0) |> # Transforma os dados em formato wide\n  as.data.frame() # Converte para data frame\n```\n:::\n\n\n\n### Visualizando os esportes {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n#unique(dados$Sport) # Mostra os valores únicos da coluna Sport\nwc = as.data.frame(table(unique(dados$Sport)))\nwordcloud2::wordcloud2(data = wc,size = 0.15,\n  color = 'random-light',\n  backgroundColor = 'black')\n```\n\n::: {.cell-output-display}\n```{=html}\n<div class=\"wordcloud2 html-widget html-fill-item-overflow-hidden html-fill-item\" id=\"htmlwidget-57343f4ddfb1514501b2\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-57343f4ddfb1514501b2\">{\"x\":{\"word\":[\"Alpine Skiing\",\"Alpinism\",\"Archery\",\"Art Competitions\",\"Athletics\",\"Badminton\",\"Baseball\",\"Basketball\",\"Basque Pelota\",\"Beach Volleyball\",\"Biathlon\",\"Bobsleigh\",\"Boxing\",\"Canoeing\",\"Cricket\",\"Croquet\",\"Cross Country Skiing\",\"Curling\",\"Cycling\",\"Diving\",\"Equestrianism\",\"Fencing\",\"Figure Skating\",\"Football\",\"Freestyle Skiing\",\"Golf\",\"Gymnastics\",\"Handball\",\"Hockey\",\"Ice Hockey\",\"Jeu De Paume\",\"Judo\",\"Lacrosse\",\"Luge\",\"Military Ski Patrol\",\"Modern Pentathlon\",\"Motorboating\",\"Nordic Combined\",\"Polo\",\"Racquets\",\"Rhythmic Gymnastics\",\"Roque\",\"Rowing\",\"Rugby\",\"Rugby Sevens\",\"Sailing\",\"Shooting\",\"Short Track Speed Skating\",\"Skeleton\",\"Ski Jumping\",\"Snowboarding\",\"Softball\",\"Speed Skating\",\"Swimming\",\"Synchronized Swimming\",\"Table Tennis\",\"Taekwondo\",\"Tennis\",\"Trampolining\",\"Triathlon\",\"Tug-Of-War\",\"Volleyball\",\"Water Polo\",\"Weightlifting\",\"Wrestling\"],\"freq\":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],\"fontFamily\":\"Segoe UI\",\"fontWeight\":\"bold\",\"color\":\"random-light\",\"minSize\":0,\"weightFactor\":27,\"backgroundColor\":\"black\",\"gridSize\":0,\"minRotation\":-0.7853981633974483,\"maxRotation\":0.7853981633974483,\"shuffle\":true,\"rotateRatio\":0.4,\"shape\":\"circle\",\"ellipticity\":0.65,\"figBase64\":null,\"hover\":null},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el,x){\\n                        console.log(123);\\n                        if(!iii){\\n                          window.location.reload();\\n                          iii = False;\\n\\n                        }\\n  }\",\"data\":null}]}}</script>\n```\n:::\n:::\n\n\n### Criação de Variáveis {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nsel1 = dados |> \n  filter(Year >= 2000) |> # Filtra os dados para o ano 2000 ou posterior\n  group_by(NOC) |> # Agrupa por NOC\n  summarise(\n    ger_mdl_ouro = sum(Gold), # Soma as medalhas de ouro\n    ger_mdl_prata = sum(Silver), # Soma as medalhas de prata\n    ger_mdl_bronze = sum(Bronze), # Soma as medalhas de bronze\n    ger_mdl_ausente = sum(Null), # Soma as medalhas ausentes\n    ger_mdl_tot = ger_mdl_ouro + ger_mdl_prata + ger_mdl_bronze, # Calcula o total de medalhas\n    ger_mdl_score = (ger_mdl_ouro * 0.5) + (ger_mdl_prata * 0.2) + (ger_mdl_bronze * 0.1), # Calcula o score de medalhas\n    ger_mdl_aproveitamento = (ger_mdl_tot) / ((ger_mdl_tot) + (ger_mdl_ausente)), # Calcula o aproveitamento de medalhas\n    ger_esportes_diferentes = n_distinct(Sport), # Conta esportes diferentes\n    ger_modalidades_diferentes =  n_distinct(Event), # Conta modalidades diferentes\n    ger_mediana_idade = median(Age,na.rm = T), # Calcula a mediana da idade\n    ger_qtd_atletas_m = sum(ifelse(Sex == 'M',1,0),na.rm = T), # Conta atletas do sexo masculino\n    ger_qtd_atletas_f = sum(ifelse(Sex == 'F',1,0),na.rm = T), # Conta atletas do sexo feminino\n    ger_prop_f = ger_qtd_atletas_f/(ger_qtd_atletas_m+ger_qtd_atletas_f) # Calcula a proporção de atletas femininas\n  ) |> \n  ungroup() |> # Desagrupa os dados\n  mutate(across(where(is.numeric), ~ rank(-.x), .names = \"rank_{col}\")) |> # Aplica ranking às colunas numéricas\n  as.data.frame() |> # Converte para data frame\n  arrange(-ger_mdl_score) # Ordena pelo score de medalhas\n\n\n\n\nsel2 = dados |> \n  filter(Year >= 2000) |> # Filtra os dados para o ano 2000 ou posterior\n  group_by(NOC,Sport) |> # Agrupa por NOC e Sport\n  summarise(\n    mdl_ouro = sum(Gold), # Soma as medalhas de ouro\n    mdl_prata = sum(Silver), # Soma as medalhas de prata\n    mdl_bronze = sum(Bronze), # Soma as medalhas de bronze\n    mdl_ausente = sum(Null), # Soma as medalhas ausentes\n    mdl_tot = mdl_ouro+mdl_prata+mdl_bronze, # Calcula o total de medalhas\n    mdl_score = (mdl_ouro*0.5)+(mdl_prata*0.2)+(mdl_bronze*0.1), # Calcula o score de medalhas\n    esportes_diferentes = n_distinct(Sport), # Conta esportes diferentes\n    modalidades_diferentes =  n_distinct(Event), # Conta modalidades diferentes\n    mediana_idade = median(Age,na.rm = T), # Calcula a mediana da idade\n    qtd_atletas_m = sum(ifelse(Sex == 'M',1,0),na.rm = T), # Conta atletas do sexo masculino\n    qtd_atletas_f = sum(ifelse(Sex == 'F',1,0),na.rm = T), # Conta atletas do sexo feminino\n    prop_f = qtd_atletas_f/(qtd_atletas_m+qtd_atletas_f) # Calcula a proporção de atletas femininas\n  ) |> \n  group_by(Sport) |> # Agrupa por Sport\n  mutate(across(where(is.numeric), ~ rank(-.x), .names = \"rank_{col}\")) |> # Aplica ranking às colunas numéricas\n  as.data.frame() |> # Converte para data frame\n  arrange(-mdl_score) |> # Ordena pelo score de medalhas\n  ungroup() # Desagrupa os dados\n\n\n\n\nsel = merge(sel2,sel1,all.x = T,by = c('NOC')) # Faz o merge dos dados por NOC\nsel = merge(sel,noc,by.x = 'NOC',by.y = 'noc_region',all.x = T) # Faz o merge com a base de dados NOC\nsel$prop_mdl_p_esporte = sel$mdl_tot/sel$ger_mdl_tot # Calcula a proporção de medalhas por esporte\n\n\nsel_ano = dados |> \n  filter(Year >= 2000) |> # Filtra os dados para o ano 2000 ou posterior\n  group_by(NOC,Year) |> # Agrupa por NOC e Year\n  summarise(\n    ger_mdl_ouro = sum(Gold), # Soma as medalhas de ouro\n    ger_mdl_prata = sum(Silver), # Soma as medalhas de prata\n    ger_mdl_bronze = sum(Bronze), # Soma as medalhas de bronze\n    ger_mdl_ausente = sum(Null), # Soma as medalhas ausentes\n    ger_mdl_tot = ger_mdl_ouro + ger_mdl_prata + ger_mdl_bronze, # Calcula o total de medalhas\n    ger_mdl_score = (ger_mdl_ouro * 0.5) + (ger_mdl_prata * 0.2) + (ger_mdl_bronze * 0.1), # Calcula o score de medalhas\n    ger_mdl_aproveitamento = (ger_mdl_tot) / ((ger_mdl_tot) + (ger_mdl_ausente)), # Calcula o aproveitamento de medalhas\n    ger_esportes_diferentes = n_distinct(Sport), # Conta esportes diferentes\n    ger_modalidades_diferentes =  n_distinct(Event), # Conta modalidades diferentes\n    ger_mediana_idade = median(Age,na.rm = T), # Calcula a mediana da idade\n    ger_qtd_atletas_m = sum(ifelse(Sex == 'M',1,0),na.rm = T), # Conta atletas do sexo masculino\n    ger_qtd_atletas_f = sum(ifelse(Sex == 'F',1,0),na.rm = T), # Conta atletas do sexo feminino\n    ger_prop_f = ger_qtd_atletas_f/(ger_qtd_atletas_m+ger_qtd_atletas_f) # Calcula a proporção de atletas femininas\n  ) |> \n  ungroup() |> # Desagrupa os dados\n  mutate(across(where(is.numeric), ~ rank(-.x), .names = \"rank_{col}\")) |> # Aplica ranking às colunas numéricas\n  as.data.frame() |> # Converte para data frame\n  arrange(-ger_mdl_score) # Ordena pelo score de medalhas\n```\n:::\n\n\n# Visualização de Dados {.justify}\n\n### Quais os países que mais dominam as olímpiadas no quadro de medalhas? {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual = sel |> \n  filter(rank_ger_mdl_tot <= 20) |> # Filtra os top 20 no ranking geral de medalhas\n  arrange(rank_ger_mdl_tot) |> # Ordena pelo ranking geral de medalhas\n  select(NOC,rank_ger_mdl_tot,reg,ger_mdl_tot,ger_esportes_diferentes,ger_mdl_score,reg) |> # Seleciona as colunas relevantes\n  distinct() # Remove duplicatas\n\nggplot(visual, aes(x = reorder(reg, ger_mdl_tot), y = ger_mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"gold\",'#C0C0C0', \"#CD7F32\"))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = round(ger_mdl_tot)), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-6-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nÉ interessante que nosso imaginário nos indique que os EUA seriam o país mais vitorioso, e isso se comprova no gráfico, onde há uma grande superioridade, possuindo mais que o dobro de medalhas da segunda colocada, Rússia. Em seguida, vêm países tradicionais como Austrália, Alemanha, França, Itália e Reino Unido, com predomínio da Europa. No gráfico, os países fora desse continente que também figuram no topo são Canadá, Brasil, China, Argentina, Cuba e Jamaica.\n\nÉ importante ressaltar que atletas da Rússia poderão participar das Olimpíadas de 2024 em Paris, mas sob condições rigorosas. Eles competirão como 'atletas neutros individuais', sem representar oficialmente a Rússia, ou seja, não poderão usar a bandeira, o hino ou as cores nacionais. Essa decisão foi tomada pelo Comitê Olímpico Internacional (COI) após a invasão da Ucrânia pela Rússia. Apenas um número muito limitado de atletas que não apoiem ativamente a guerra e que não estejam contratualmente vinculados ao exército russo ou bielorrusso será elegível para competir.\n\nNesse visual, abordamos quais países em valores absolutos possuem maior domínio olímpico. Mas será que isso se repete quando pensamos em termos de aproveitamento de medalhas, considerando a proporção de medalhas ganhas pelo total de atletas que participaram das modalidades? Em seguida, temos um visual que mostra os países com maior aproveitamento. Um detalhe é que, para essa análise, separamos apenas os países que participaram de pelo menos 10 esportes distintos, atribuindo uma faixa de corte visando a diversidade esportiva.\n\n### Quais os países têm maior aproveitamento de medalhas? {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual  = sel |> \n  filter(ger_esportes_diferentes >= 10) |> # Filtra para esportes diferentes >= 10\n  arrange(rank_ger_mdl_aproveitamento) |> # Ordena pelo ranking de aproveitamento de medalhas\n  select(reg,ger_mdl_tot,ger_mdl_aproveitamento,ger_esportes_diferentes) |> # Seleciona as colunas relevantes\n  distinct() |> # Remove duplicatas\n  head(20) # Seleciona os top 15\n\n\nggplot(visual, aes(x = reorder(reg, ger_mdl_aproveitamento), y = ger_mdl_aproveitamento)) + # Cria gráfico de barras ordenado pelo aproveitamento de medalhas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"gold4\", \"gold1\"))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = paste0(round(ger_mdl_aproveitamento*100),'%')), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\",color = 'white') + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"), # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-7-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nComo podemos perceber, a seleção americana segue no topo, também nesse critério, com um aproveitamento de 32% das medalhas disputadas. Porém, note que a diferença para os demais colocados é menor que no total de medalhas, mostrando um maior equilíbrio no topo. Um destaque interessante é a segunda colocada, Sérvia, que não aparece no visual anterior, mas tem um alto aproveitamento na disputa das medalhas. Outros países em seguida que 'não entram para perder' são a Holanda, China, Rússia, Noruega, Dinamarca, Austrália, Cuba e Alemanha, completando o top 10.\n\nE se olharmos agora por uma ótica onde criaremos um score, dando 50%, 30% e 10% de peso sobre o total de medalhas de ouro, prata e bronze, respectivamente, com o objetivo de verificar se alguns países sobem no ranking geral pela qualidade das medalhas conquistadas?\n\n### Nações com maiores scores de medalhas {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvisual <- sel |> \n  arrange(-ger_mdl_score) |> # Ordena pelo score de medalhas\n  select(NOC, reg, ger_mdl_score, ger_mdl_aproveitamento, ger_mdl_tot) |> # Seleciona as colunas relevantes\n  distinct() |> # Remove duplicatas\n  head(20) |> # Seleciona os top 20\n  mutate(\n    iso2 = tolower(countrycode(reg, \"country.name\", \"iso2c\")), # Converte nomes de países para códigos ISO2\n    color = case_when(\n      row_number() == 1 ~ \"gold\", # Cor para o 1º lugar\n      row_number() == 2 ~ \"#C0C0C0\", # Cor para o 2º lugar\n      row_number() == 3 ~ \"#CD7F32\", # Cor para o 3º lugar\n      TRUE ~ \"#E0E0E0\" # Cor para os demais\n    )\n  )\n\nggplot(visual, aes(x = reorder(reg, ger_mdl_score), y = ger_mdl_score)) + # Cria gráfico de barras ordenado pelo score de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define as cores das barras\n  geom_text(aes(label = round(ger_mdl_score)), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity() # Aplica as cores definidas manualmente\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-8-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nEm comparação com o primeiro visual, vemos que as nações que obtiveram um maior salto a partir da qualidade das medalhas no ranking foram a China e o Reino Unido. Em relação aos três primeiros colocados, nada mudou.\n\nExpandindo um pouco nosso olhar além do contexto geral, podemos nos perguntar quais nações mais dominam cada esporte. Uma pergunta que podemos levantar é sobre os países que têm mais tradição em um só esporte. Costumamos dizer que o Brasil é o país do futebol, mas e nas Olimpíadas, quais países são mais tradicionais dentro dos esportes que disputam?\n\n### Países com Maior Tradição em um Esporte {.justify}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual  = sel |> \n  arrange(-prop_mdl_p_esporte) |> # Ordena pela proporção de medalhas por esporte\n  select(Sport,reg,prop_mdl_p_esporte,mdl_tot) |> # Seleciona as colunas relevantes\n  filter(mdl_tot >= 5) |> # Filtra para total de medalhas >= 5\n  head(20) # Seleciona os top 20\n\n\nunique(visual$Sport) # Mostra os valores únicos da coluna Sport\n\ncores_esporte <- c(\n  \"Athletics\" = \"#FF4500\",  # Cor para Athletics\n  \"Football\" = \"#008000\",   # Cor para Football\n  \"Swimming\" = \"#1E90FF\",   # Cor para Swimming\n  \"Ice Hockey\" = \"#4682B4\", # Cor para Ice Hockey\n  \"Hockey\" = \"#FFD700\",     # Cor para Hockey\n  \"Rowing\" = \"#8B4513\",     # Cor para Rowing\n  \"Alpine Skiing\" = \"#A52A2A\", # Cor para Alpine Skiing\n  \"Water Polo\" = \"#00CED1\",  # Cor para Water Polo\n  \"Wrestling\" = \"#DC143C\"    # Cor para Wrestling\n)\n\nggplot(visual, aes(x = reorder(reg, prop_mdl_p_esporte), y = prop_mdl_p_esporte, fill = Sport)) + # Cria gráfico de barras ordenado pela proporção de medalhas por esporte\n  geom_bar(stat = \"identity\") + # Define o tipo de gráfico\n  geom_text(aes(label = paste0(round(prop_mdl_p_esporte * 100), '%')), vjust = 0.5, hjust = 1.25, size = 4, fontface = \"bold\",color = 'white') + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  scale_fill_manual(values = cores_esporte) +  # Configura as cores manualmente\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-9-1.png){fig-align='center' width=672}\n:::\n:::\n\n\nÉ relevante destacar que, para esse visual, consideramos apenas os países que têm no mínimo 5 medalhas conquistadas no esporte. Podemos visualizar que alguns países têm 100% das medalhas conquistadas neste século em apenas um esporte, como Marrocos, Quênia, Jamaica, Etiópia e Bahamas no Atletismo; Paraguai e Camarões no Futebol (como são esportes coletivos de no mínimo 11 jogadores titulares, a quantidade de medalhas conquistadas favorece esses países); e, por fim, Zimbábue na Natação. Assim, podemos dizer que são países 'especialistas' nesses esportes.\n\nDito isso, e se agora quisermos ver quais países de fato têm mais medalhas por esporte? É o que mostramos a seguir.\n\n### Países com mais medalhas por esporte {.justify}\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nvisual = sel |>\n  filter(reg != 'NA') |>\n  filter(rank_mdl_tot <= 3) |> # Filtra os top 3 no ranking de total de medalhas\n  arrange(Sport,rank_mdl_tot) |> # Ordena por Sport e ranking de total de medalhas\n  select(NOC,Sport,rank_mdl_tot,reg,mdl_tot) |> # Seleciona as colunas relevantes\n  mutate(\n    color = case_when(\n      rank_mdl_tot <= 1.5 ~ \"gold\", # Cor para o 1º lugar\n      rank_mdl_tot <= 2.5 ~ \"#C0C0C0\", # Cor para o 2º lugar\n      rank_mdl_tot <= 3.5 ~ \"#CD7F32\", # Cor para o 3º lugar\n      TRUE ~ \"#E0E0E0\" # Cor para os demais\n    )\n  )\n\n\n#length(unique(visual$Sport)) # Conta os valores únicos da coluna Sport\n\n\nvisual$reg <- tidytext::reorder_within(visual$reg, visual$mdl_tot, visual$Sport) # Reordena dentro de cada esporte\n\nsports = visual |> group_by(Sport) |> summarise(s = sum(mdl_tot)) |> arrange(-s) |> select(Sport) |> pull()\n\nvisual1 = visual[visual$Sport %in% sports[1:9],] # Filtra os primeiros 18 esportes\nvisual2 = visual[visual$Sport %in% sports[10:18],] # Filtra os próximos 18 esportes\nvisual3 = visual[visual$Sport %in% sports[19:27],] # Filtra os últimos esportes\nvisual4 = visual[visual$Sport %in% sports[28:36],] # Filtra os últimos esportes\nvisual5 = visual[visual$Sport %in% sports[37:45],] # Filtra os últimos esportes\nvisual6 = visual[visual$Sport %in% sports[46:54],] # Filtra os últimos esportes\n\n\nlibrary(tidytext) # Carrega o pacote tidytext\n\nggplot(visual1, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-10-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual2, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-11-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual3, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-12-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual4, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-13-1.png){fig-align='center' width=672}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot(visual5, aes(x = reorder(reg,mdl_tot), y = mdl_tot)) + # Cria gráfico de barras ordenado pelo total de medalhas\n  geom_bar(stat = \"identity\", aes(fill = color)) + # Define o tipo de gráfico e as cores\n  geom_text(aes(label = round(mdl_tot)), vjust = 0.5, hjust = 1, size = 4, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 0, face = \"bold\", hjust = 0.5),# Ajusta título\n    strip.text = element_text(size = 8.5, face = \"bold\", color = \"black\")  # Ajusta título do facet\n  ) +\n  labs(title = \"\") + # Define título\n  scale_fill_identity()+ # Aplica as cores definidas manualmente\n  tidytext::scale_x_reordered() +  # Ajusta etiquetas do eixo x\n  facet_wrap(~Sport, scales = \"free_y\") # Facet wrap por esporte com escalas livres no eixo y\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-14-1.png){fig-align='center' width=672}\n:::\n:::\n\n\n\nNo primeiro gráfico, dentro do bloco de esportes com mais volume de medalhas distribuídas, temos a seleção americana liderando 4 dos 9 esportes destacados: Atletismo, Basquete, Hóquei no Gelo e Natação. Outro destaque é a Austrália, que fica com a simbólica medalha de prata em 4 esportes. Além da Etiópia, que figurou no ranking das seleções com mais tradição em um só esporte, resultando no pódio geral no Atletismo.\n\nNos demais visuais, conseguimos ver nossa seleção liderando o Vôlei de Praia e o Vôlei de Quadra. Alguns países que me surpreenderam, por não estarem nos rankings gerais de medalhas e também por não conhecer todas as culturas e esportes, foram:\n\n- Taiwan e México liderando no Taekwondo\n- Suíça à frente no Trenó (bobsleigh)\n- Áustria dominando no Esqui Alpino\n- Coreia do Sul em primeiro na Patinação de Velocidade em Pista Curta\n\nA maioria dessas 'surpresas' realmente tem viés de não conhecimento cultural e/ou dos esportes.\n\n\n### Quais os países com maior integração das mulheres no esporte? (considerando as nações que possuem mais de 20 atletas) {.justify}\n\n::: {.cell}\n\n```{.r .cell-code}\n#| fig-align: center\n#| echo: true\n#| warning: false\n#| message: false\n\n{\nvisual = sel |> \n  arrange(-ger_prop_f) |> # Ordena pela proporção de atletas femininas\n  select(NOC,reg,ger_mdl_tot,ger_qtd_atletas_f,ger_prop_f,ger_qtd_atletas_m) |> # Seleciona as colunas relevantes\n  filter(ger_qtd_atletas_f+ger_qtd_atletas_m >= 20) |> # Filtra para total de atletas >= 20\n  distinct() |> # Remove duplicatas\n  head(25) # Seleciona os top 20\n\nsel |> \n  arrange(-ger_prop_f) |> # Ordena pela proporção de atletas femininas\n  select(NOC,reg,ger_mdl_tot,ger_qtd_atletas_f,ger_prop_f,ger_qtd_atletas_m) |> # Seleciona as colunas relevantes\n  filter(ger_qtd_atletas_f+ger_qtd_atletas_m >= 20) |> # Filtra para total de atletas >= 20\n  distinct() |> # Remove duplicatas\n  head(25) # Seleciona os top 20\n\nvisual[,c('ger_prop_f','NOC','reg')]\n\nggplot(visual, aes(x = reorder(paste0(reg,' | ',NOC), ger_prop_f), y = ger_prop_f)) + # Cria gráfico de barras ordenado pela proporção de atletas femininas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"deeppink\", \"pink\", \"lightpink\" ))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = paste0(round(ger_prop_f*100,1),'%')), vjust = 0.5, hjust = 1.25, size = 3.5, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\nPodemos ver que as nações que possuem mais representantes femininas neste século, de maneira bem predominante, são Coreia do Norte, Zimbábue, Angola, Bahamas e Panamá, com mais de 60% de representação. As nações líderes na participação feminina vêm do continente asiático e africano. Tomando como base uma proporção entre 45% e 55%, podemos classificar como um intervalo de equilíbrio entre os sexos. Assim, temos logo em sequência países que conseguem ter ambos os sexos sendo representados de forma semelhante.  Um destaque curioso vai para Israel, que possui essa representatividade exatamente igual. A pergunta que fica é: qual é o fundo do iceberg desse visual?\n\n### Países com menor participação de mulheres {.justify}\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n{\nvisual = sel |> \n  arrange(ger_prop_f) |> # Ordena pela proporção de atletas femininas\n  select(NOC,reg,ger_mdl_tot,ger_qtd_atletas_f,ger_prop_f,ger_qtd_atletas_m) |> # Seleciona as colunas relevantes\n  filter(ger_qtd_atletas_f+ger_qtd_atletas_m >= 20) |> # Filtra para total de atletas >= 20\n  distinct() |> # Remove duplicatas\n  head(25) # Seleciona os top 20\n\nggplot(visual, aes(x = reorder(paste0(reg,' | ',NOC), -ger_prop_f), y = ger_prop_f)) + # Cria gráfico de barras ordenado pela proporção de atletas femininas\n  geom_bar(stat = \"identity\", fill = scales::gradient_n_pal(c(\"lightpink\", \"pink\", \"deeppink\" ))(seq(0, 1, length.out = nrow(visual)))) + # Define as cores das barras\n  geom_text(aes(label = paste0(round(ger_prop_f*100,1),'%')), vjust = 0.5, hjust = 1.25, size = 3.5, fontface = \"bold\") + # Adiciona texto às barras\n  coord_flip() + # Inverte os eixos\n  theme_minimal() + # Aplica tema minimalista\n  theme(\n    axis.title.x = element_blank(), # Remove título do eixo x\n    axis.title.y = element_blank(), # Remove título do eixo y\n    axis.text.x = element_blank(), # Remove texto do eixo x\n    axis.ticks.x = element_blank(), # Remove ticks do eixo x\n    axis.text.y = element_text(size = 10, face = \"bold\"),  # Ajusta texto do eixo y\n    panel.grid = element_blank(), # Remove grid\n    plot.title = element_text(size = 14, face = \"bold\", hjust = 0.5)  # Ajusta título\n  ) +\n  labs(title = \"\") # Define título\n\n}\n```\n\n::: {.cell-output-display}\n![](olimpiadas-Copia_files/figure-html/unnamed-chunk-16-1.png){fig-align='center' width=672}\n:::\n:::\n\nPor outro lado, temos muitos países que possuem enorme desigualdade, onde o top 25 com mais 'igualdade' possui 25% de mulheres representantes. No fundo do iceberg, liderando essa estatística, estão Paquistão, Arábia Saudita, Kuwait e Bósnia, com menos de 10% de representatividade.\n\n# Referências {.justify}\n\n- [Base de Dados | Olympic Data](https://www.kaggle.com/datasets/bhanupratapbiswas/olympic-data)\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "olimpiadas-Copia_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/htmlwidgets-1.6.2/htmlwidgets.js\"></script>\r\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/datatables-binding-0.28/datatables.js\"></script>\r\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\r\n<link href=\"../../site_libs/dt-core-bootstrap-1.13.4/css/dataTables.bootstrap.min.css\" rel=\"stylesheet\" />\r\n<link href=\"../../site_libs/dt-core-bootstrap-1.13.4/css/dataTables.bootstrap.extra.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/dt-core-bootstrap-1.13.4/js/jquery.dataTables.min.js\"></script>\r\n<script src=\"../../site_libs/dt-core-bootstrap-1.13.4/js/dataTables.bootstrap.min.js\"></script>\r\n<link href=\"../../site_libs/crosstalk-1.2.0/css/crosstalk.min.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/crosstalk-1.2.0/js/crosstalk.min.js\"></script>\r\n<link href=\"../../site_libs/wordcloud2-0.0.1/wordcloud.css\" rel=\"stylesheet\" />\r\n<script src=\"../../site_libs/wordcloud2-0.0.1/wordcloud2-all.js\"></script>\r\n<script src=\"../../site_libs/wordcloud2-0.0.1/hover.js\"></script>\r\n<script src=\"../../site_libs/wordcloud2-binding-0.2.1/wordcloud2.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}